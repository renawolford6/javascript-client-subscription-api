/**
 * Yoast.com provisioning API
 * The Yoast provisioning API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
* ProvisioningDownloads service.
* @module api/ProvisioningDownloadsApi
* @version 1.0.0
*/
export default class ProvisioningDownloadsApi {

    /**
    * Constructs a new ProvisioningDownloadsApi. 
    * @alias module:api/ProvisioningDownloadsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the apiProvisioningDownloadsCurrentVersionGet operation.
     * @callback module:api/ProvisioningDownloadsApi~apiProvisioningDownloadsCurrentVersionGetCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve the current version for the productCode for the provisioner.
     * This route returns the latest version of the product that is offered to the customer when using the passed productCode.
     * @param {module:api/ProvisioningDownloadsApi~apiProvisioningDownloadsCurrentVersionGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    apiProvisioningDownloadsCurrentVersionGet(productCode, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'productCode': productCode
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/api/provisioning/downloads/currentVersion', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the apiProvisioningDownloadsCurrentZipGet operation.
     * @callback module:api/ProvisioningDownloadsApi~apiProvisioningDownloadsCurrentZipGetCallback
     * @param {String} error Error message, if any.
     * @param {'String'} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Redirect to the current zip for the productCode.
     * If a new version is available, you can use this route to redirect to the zip of that new version of the product.
     * @param {module:api/ProvisioningDownloadsApi~apiProvisioningDownloadsCurrentZipGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link 'String'}
     */
    apiProvisioningDownloadsCurrentZipGet(productCode, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'productCode': productCode
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'String';

      return this.apiClient.callApi(
        '/api/provisioning/downloads/currentZip', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
