/**
 * Yoast.com provisioning API
 * The Yoast provisioning API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelInt from './ModelInt';

/**
* The SubscriptionProvisioningResponseDto model module.
* @module model/SubscriptionProvisioningResponseDto
* @version 1.0.0
*/
export default class SubscriptionProvisioningResponseDto {
    /**
    * Constructs a new <code>SubscriptionProvisioningResponseDto</code>.
    * @alias module:model/SubscriptionProvisioningResponseDto
    * @class
    * @param ID {String} The subscription ID to be used privately.
    * @param subscriptionNumber {String} The subscription invoice number, can be communicated publicly.
    * @param status {String} The status of the subscription.
    * @param startDate {module:model/ModelInt} The date the subscription has started.
    * @param endDate {module:model/ModelInt} The date the subscription will expire.
    * @param pluginDownloadUrls {Array.<String>} The URLs for the latest version of the download for the products in the subscription.
    * @param siteUrl {String} The URL for the site connected to this subscription.
    */

    constructor(ID, subscriptionNumber, status, startDate, endDate, pluginDownloadUrls, siteUrl) {
        
        
        this['ID'] = ID;
        this['subscriptionNumber'] = subscriptionNumber;
        this['status'] = status;
        this['startDate'] = startDate;
        this['endDate'] = endDate;
        this['pluginDownloadUrls'] = pluginDownloadUrls;
        this['siteUrl'] = siteUrl;
        
    }

    /**
    * Constructs a <code>SubscriptionProvisioningResponseDto</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/SubscriptionProvisioningResponseDto} obj Optional instance to populate.
    * @return {module:model/SubscriptionProvisioningResponseDto} The populated <code>SubscriptionProvisioningResponseDto</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionProvisioningResponseDto();
                        
            
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'String');
            }
            if (data.hasOwnProperty('subscriptionNumber')) {
                obj['subscriptionNumber'] = ApiClient.convertToType(data['subscriptionNumber'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], ModelInt);
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], ModelInt);
            }
            if (data.hasOwnProperty('pluginDownloadUrls')) {
                obj['pluginDownloadUrls'] = ApiClient.convertToType(data['pluginDownloadUrls'], ['String']);
            }
            if (data.hasOwnProperty('siteUrl')) {
                obj['siteUrl'] = ApiClient.convertToType(data['siteUrl'], 'String');
            }
        }
        return obj;
    }

    /**
    * The subscription ID to be used privately.
    * @member {String} ID
    */
    'ID' = undefined;
    /**
    * The subscription invoice number, can be communicated publicly.
    * @member {String} subscriptionNumber
    */
    'subscriptionNumber' = undefined;
    /**
    * The status of the subscription.
    * @member {String} status
    */
    'status' = undefined;
    /**
    * The date the subscription has started.
    * @member {module:model/ModelInt} startDate
    */
    'startDate' = undefined;
    /**
    * The date the subscription will expire.
    * @member {module:model/ModelInt} endDate
    */
    'endDate' = undefined;
    /**
    * The URLs for the latest version of the download for the products in the subscription.
    * @member {Array.<String>} pluginDownloadUrls
    */
    'pluginDownloadUrls' = undefined;
    /**
    * The URL for the site connected to this subscription.
    * @member {String} siteUrl
    */
    'siteUrl' = undefined;




}
