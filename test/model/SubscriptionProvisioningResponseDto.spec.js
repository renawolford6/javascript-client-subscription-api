/*
 * Yoast.com provisioning API
 * The Yoast provisioning API
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.26
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.YoastProvisionerApiClient);
  }
}(this, function(expect, YoastProvisionerApiClient) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SubscriptionProvisioningResponseDto', function() {
      beforeEach(function() {
        instance = new YoastProvisionerApiClient.SubscriptionProvisioningResponseDto();
      });

      it('should create an instance of SubscriptionProvisioningResponseDto', function() {
        // TODO: update the code to test SubscriptionProvisioningResponseDto
        expect(instance).to.be.a(YoastProvisionerApiClient.SubscriptionProvisioningResponseDto);
      });

      it('should have the property ID (base name: "ID")', function() {
        // TODO: update the code to test the property ID
        expect(instance).to.have.property('ID');
        // expect(instance.ID).to.be(expectedValueLiteral);
      });

      it('should have the property subscriptionNumber (base name: "subscriptionNumber")', function() {
        // TODO: update the code to test the property subscriptionNumber
        expect(instance).to.have.property('subscriptionNumber');
        // expect(instance.subscriptionNumber).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property startDate (base name: "startDate")', function() {
        // TODO: update the code to test the property startDate
        expect(instance).to.have.property('startDate');
        // expect(instance.startDate).to.be(expectedValueLiteral);
      });

      it('should have the property endDate (base name: "endDate")', function() {
        // TODO: update the code to test the property endDate
        expect(instance).to.have.property('endDate');
        // expect(instance.endDate).to.be(expectedValueLiteral);
      });

      it('should have the property pluginDownloadUrls (base name: "pluginDownloadUrls")', function() {
        // TODO: update the code to test the property pluginDownloadUrls
        expect(instance).to.have.property('pluginDownloadUrls');
        // expect(instance.pluginDownloadUrls).to.be(expectedValueLiteral);
      });

      it('should have the property siteUrl (base name: "siteUrl")', function() {
        // TODO: update the code to test the property siteUrl
        expect(instance).to.have.property('siteUrl');
        // expect(instance.siteUrl).to.be(expectedValueLiteral);
      });

    });
  });

}));
